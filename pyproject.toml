[project]
name = "CNVkit"
description = "Copy number variation toolkit for high-throughput sequencing."
readme = "README.rst"
license = "Apache-2.0"
authors = [
  {name = "Eric Talevich", email = "me+code@etal.mozmail.com"}
]
maintainers = [
  {name = "Eric Talevich", email = "me+code@etal.mozmail.com"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Healthcare Industry",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: POSIX",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
  "Topic :: Scientific/Engineering :: Medical Science Apps.",
  "Topic :: Scientific/Engineering :: Visualization"
]
requires-python = ">=3.9"
dynamic = ["version", "dependencies", "optional-dependencies"]

[project.urls]
homepage = "https://github.com/etal/cnvkit"
documentation = "https://cnvkit.readthedocs.io"
repository = "https://github.com/etal/cnvkit"
changelog = "https://github.com/etal/cnvkit/releases"

[project.scripts]
"cnvkit.py" = "cnvlib.cnvkit:main"
"cnv_annotate.py" = "cnvlib.cli.cnv_annotate:main"
"cnv_expression_correlate.py" = "cnvlib.cli.cnv_expression_correlate:main"
"cnv_updater.py" = "cnvlib.cli.cnv_updater:main"
"genome_instability_index.py" = "cnvlib.cli.genome_instability_index:main"
"guess_baits.py" = "cnvlib.cli.guess_baits:main"
"reference2targets.py" = "cnvlib.cli.reference2targets:main"
"skg_convert.py" = "skgenome.cli.skg_convert:main"
# XXX TODO -- figure out whether this script should and could be included
# in the installation
#"snpfilter.sh" = "scripts/snpfilter.sh"

[build-system]
# Minimum requirements for the build system to execute (PEP 508)
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["cnvlib", "cnvlib.cli", "cnvlib.segmentation", "skgenome", "skgenome.cli", "skgenome.tabio"]

[tool.setuptools.dynamic]
version = {attr = "cnvlib._version.__version__"}
dependencies = {file = "requirements/core.txt"}
optional-dependencies = {test = {file = "requirements/tests.txt"}, hmm = {file = "requirements/hmm.txt"}}

[tool.pytest.ini_options]
testpaths = ["test"]
filterwarnings = ["error"]

[tool.coverage.run]
branch = true
source = ["cnvlib", "skgenome"]

[tool.coverage.paths]
source = ["cnvlib", "skgenome"]

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "NPY", # numpy rules
    "PD", # pandas-vet
    "RUF", # ruff's extra rules
    "TC", # flake8-type-checking
    #"SIM", # flake8-simplify
    #"ANN", # flake8-annotations
]
ignore = [
    "E402",  # import not at top
    "E501",  # line too long
    "F401",  # unused import
    "F841",  # unused variable
    "UP007", # X|Y type annotations
    "UP031", # % format
    "UP032", # format call vs. f-string
    "UP045", # X|None type annotations
    "B007",  # loop variable not used in body
    "B023",  # def closing over loop variable
    "PD009", # use .iloc instead of .iat (iat is actually faster for scalar access)
    "PD901", # avoid generic variable name 'df' (acceptable in scientific code)
    "RUF100", # unneeded noqa
    #"SIM108", # ternary if-else
    #"SIM401", # use dict.get
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
